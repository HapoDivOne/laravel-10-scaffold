name: Laravel

on:
  push:
    branches:
      - dev
      - prd
  pull_request:
    branches:
      - dev
      - prd

jobs:
  laravel-tests:
    name: Auto test
    runs-on: ubuntu-latest
    services:
      #mysql-service Label used to access the service container
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testing
        ports:
          - 3306:3306
        #Set health checks to wait until mysql database has started (it takes some seconds to start)
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - uses: actions/checkout@v3
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: Setup PHP with Xdebug
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          coverage: xdebug
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - if: ${{ steps.composer-cache.outputs.cache-hit != 'true' }}
        name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: npm install
        run: npm install
      - name: npm run build
        run: npm run build
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: mysql
          DB_DATABASE: testing
          DB_PORT: 3306
          DB_USER: root
          DB_PASSWORD: root
          DB_HOST: 127.0.0.1
        run: |
          php artisan migrate
          ./vendor/bin/phpunit --coverage-clover=coverage-report.xml
      # Fix coverage path
      - name: Fix code coverage paths
        run: sed -i 's@'$GITHUB_WORKSPACE'@/github/workspace/@g' coverage-report.xml
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        # If you wish to fail your job when the Quality Gate is red, uncomment the
        # following lines. This would typically be used to fail a deployment.
      - name: SonarQube Quality Gate Result
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy-stagging:
    name: Deploy Stagging
    runs-on: ubuntu-latest
    needs: laravel-tests
    if: github.ref == 'refs/heads/dev'
    steps:
      - uses: actions/checkout@v3
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
      - name: Laravel Setup
        run: |
          composer install
      - name: Deploy
        uses: deployphp/action@v1
        with:
          private-key: ${{ secrets.STG_PRIVATE_KEY }}
          dep: deploy server.dev
          ssh-config: |
            Host server.dev
              HostName ${{ secrets.STG_HOST }}
              User ubuntu
              StrictHostKeyChecking no
